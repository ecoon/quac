#!/usr/bin/env python3

'Print ngrams-build results.'

# Copyright (c) Los Alamos National Security, LLC, and others.



import io
import sys

import numpy as np
np.seterr(invalid='ignore')  # let 0/0 simply result in NaN

import quacpath
import hash_
import qr.base
import testable
import time_
import tsv_glue
import u
l = u.l


ap = u.ArgumentParser(description=__doc__)
gr = ap.default_group
gr.add_argument('--detail',
                action='store_true',
                help='print TSV of time series in addition to metadata')
gr.add_argument('--query',
                metavar='NGRAM',
                help='print this n-gram (otherwise print all)')
gr.add_argument('inputdir',
                metavar='INPUTDIR',
                help='quacreduce output directory from ngrams-build')


### Main ###

def main():
   try:
      file_ct = u.glob_maxnumeric(args.inputdir) + 1
   except TypeError:
      u.abort('no input files in %s' % (args.inputdir))
   try:
      totals = u.pickle_load('%s/total.pkl.gz' % (args.inputdir))
   except Exception as x:
      u.abort('cannot read total file: %s' % (x))
   tsv = tsv_glue.Writer(sys.stdout.fileno())
   for i in range(file_ct):
      if (args.query is not None and hash_.of(args.query) % file_ct != i):
         continue
      fp = io.open('%s/%d' % (args.inputdir, i), 'rb')
      for line in fp:
         (k, _, v) = line.partition(b'\t')
         k = k.decode('utf8')
         v = qr.base.decode(v)
         (proj, _, article) = k.partition(' ')
         ngram_vec = v['series']
         tot_vec = totals['projects'][proj]['series']
         if (args.query is None or k == args.query):
            if (args.detail):
               (ngram_vec, tot_vec) = ngram_vec.bi_union(ngram_vec, tot_vec)
               assert (ngram_vec.bounds_eq(tot_vec))
               for (i, row) in enumerate(zip(ngram_vec.iso8601iter,
                                             ngram_vec.astype(np.int64),
                                             tot_vec.astype(np.int64),
                                             ngram_vec / tot_vec * 1e6)):
                  if ('mask' in totals and not totals['mask'][i]):
                     # Print nothing instead of (invalid) masked data.
                     # FIXME: Does not work for Twitter. See issue #86.
                     tsv.writerow((row[0], None, None, None))
                  else:
                     tsv.writerow(row)
            else:
               fd = time_.iso8601_date(ngram_vec.first_day)
               ld = time_.iso8601_date(ngram_vec.last_day)
               tsv.writerow((k, v['total'], fd, ld))
            if (k == args.query):
               break


### Bootstrap ###

try:

   args = u.parse_args(ap)
   u.logging_init('ngsch')

   if (__name__ == '__main__'):
      main()

except testable.Unittests_Only_Exception:
   testable.register('')
